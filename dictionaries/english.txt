openFile=Open File
saveFile=Save File
emulator=Stella Emulator
emulatorNotFound=Couldn't find Stella emulator. Would you like to find it yourself?
openEmulator=Open Stella Emulator
exe=Executables
*=All Types
new=New Project
open=Open Project
save=Save Active Job
saveAll=Save Whole Project
closeProject=Close Project
copy=Copy Text
paste=Paste Text
undo=Undo Move
redo=Redo Move
spriteEditor=Sprite Editor
playfieldEditor=Playfield Editor
projectPath=Project Path:
screenSizeError=Screen Size Error!
screenSizeErrorMessage=At least 1024x768 resolution recommended! Yet want to continue?
openFolder=Open Folder
projectName=Project Name:
ok=OK
cancel=Cancel
unsaved=Unsaved Project
unsavedText=You project has unsaved changes! Would you like to save it?
projectNewError=New Project Error
projectNewErrorText=Couldn't create new project '#name#'!
errorSystemText=System Message:
projectOpenError=Open Project Error
projectOpenErrorText=Couldn't open project '#name#'!
openProjectIndex=Open Project Index
project2600=Project2600 Files
projectSaveError=Save Code Error
projectSaveError=Error while saving #bank#'s #name# code!
selectedBank=Selected Bank:
selectedSection=Selected Section:
projectList=Project List:
lockButton=Bank Locks
lockManager=Bank Lock Manager
exit=Exit
memoryManager=Memory Manager
variables=Variables:
selectVar=Select Variable
insertVar=Insert Variable
selectArray=Select Array
insertArray=Insert Array
arrays=Arrays:
fastSwitching=Fast Switching:
manageVariable=Manage Variable:
varName=Name of Variable:
create=Create
modify=Modify
delete=Delete
varAddress=Variable Address:
usedBits=Used Bits:
manageArray=Manage Array:
arrName=Name of Array:
varNameTooShort=Variable names must be at least 4 characters long!
varNameNotValid=Variable names start with a letter and can contain letters, numbers, the minus sign and the underscore.
arrNameTooShort=Array names must be at least 4 characters long!
arrNameNotValid=Array names start with a letter and can contain letters, numbers, the minus sign and the underscore.
arrVariables=Contained Variables:
arrAvailable=Compatible Variables:
systemVar=System reserved variable name found.
alreadyVar=Can't assign name given already to a variable.
alreadyArr=Can't assign name given already to an array.
freeMemory=Memory Available:
basicRam=Available Basic RAM globally
saraRam=Available SARA RAM globally
basicRamLocal=Available Basic RAM for this bank
saraRamLocal=Available SARA RAM for this bank
varLocated=Variable with the same name found in other bank.
arrLocated=Array with the same name found in other bank.
commandName=Can't assign name given already to a command.
codeEditor=Code Editor
subs=Subroutines:
insertSub=Insert Subroutine
selectSub=Select Subroutine
bankLinks=Bank Links:
insertBankLinks=Insert Bank Link
lockNChase=#bank# is locked by #lockname#.
deliminatorSetter=Set Deliminator:
applyChanges=Apply Changes
replacer=Text Replacer:
originalText=Original Text
newText=New Text
thisText=This Section
thisBank=Full Bank
fullCode=Full Code
ColorPalette=Color Palettes
alsoComments=Also Comments
screenItems=Screen Items:
insertItem=Insert Item
preview=Preview:
ColorPicker=Color Picker:
kernelType=Kernel Type:
notEnoughMemory=Not enough memory!
kernelChangeFail=Changing to #kernel# kernel has failed! Changes are reverted!
changeKernel=Change Kernel
currentKernel=Current Kernel:
availableKernels=Available Kernels:
warning=Warning!
kernelChangeWarning=Changing to a new kernel at the middle of development can be risky. Continue anyway?
preview=Preview:
height=Height:
index=Index:
playfield=Playfield:
background=Background:
name=Name:
fileExists=File Already Exists
overWrite=Given name already exists. Would you like to overwrite it?
a26=Atari 2600 Source Files
differentKernel=Different Kernel Warning
differentKernelMessage=Seems like this file was created with a different kernel. Load it anyway?
notSavedFile=Unsaved File
notSavedFileMessage=File is not saved yet! Do you want to do it now?
unableToOpenFile=Failed to Open
unableToOpenFileMessage=Unable to open file!
loadPicture=Load Image
multiple=Multiple Formats
importImage=Import Image:
thresholdSetter=Threshold Setter:
invert=Invert
preferRight=Prefer Right Side
testWithEmulator=Test with Emulator:
spriteEditor=Sprite Editor
frameNum=Number of Frames:
testColor=Test BG Color:
testSpeed=Test Speed:
testWidth=Test Width:
horMove=Horizontal Movement
verMove=Vertical Movement
testPlayfield=Tester Playfield and Background:
blank=*Blank*
refreshList=Refresh List
kernelTester=Kernel Tester
foundOut=Seems like you just really love clicking.
kernelFile=Kernel File:
enterBank2=Enter:
overscanBank2=Overscan:
kernelData=Kernel Data:
screenTopData=Screen Top Data:
asm=6502 Assembly Code
tileSetMode=TileSet Mode
testAsP1=Test as P1
music=Music Composer
selectChannel=Select Channel:
drum=Drum
hat=High Hat
snare=Snare
horn=Horn
buzz=Buzz
selectedScreen=Selected Screen
insertScreen=Insert New Screen
deleteCurrentScreen=Delete Current Screen
notEmpty=Not Empty
notEmptyMessage=Seems like the screen contains notes. Delete anyway?
buzzer=Buzz Effect (for bass)
vibratio=Vibratio Effect (for ##)
beat=Beats:
fadeOut=Fadeout:
toneLen=Tone Length:
corrector=Corrector:
artist=Artist:
title=Title:
musicExists=Music Exists
musicExistsMessage=Seems like the music name you selected already exists! Want to overwrite?
cover=Cover:
banksToLock=Banks to Lock:
bankLockError=Bank Lock Error
bankLockErrorMessage=No free bank for lock found.
textColors=Text/Back Colors:
frameColor=Frame Color:
visualizerColors=Visualizer Colors:
importMedia=Import Media:
importFile=Import File
mid=MIDI File
sid=SID (C64) File
vgm=Adlib Music File
vgz=Adlib Music File
mod=MOD (Amiga) File
importError=Media Import Error
importErrorMessage=Couldn't import selected media, may be incompatible or corrupted.
overflow=Data Overflow
overflowMessage=Data Overflow occured, ROM is corrupted.
cutPerc=Cut Percussion
maxChannels=Max Convertable Channels:
64pxPicture=64 Pixels Picture Generator
savePicture=Save Picture
invertPF=Mirror PF pixels
invertColors=Invert PF/BG Colors
reduceBG=Reduce BG Colors
oneColorBG=Possible one Color BG reduction
generateMusicRom=Save It to MusicROM folder
askForSomething=Value Needed
askForSeconds=Enter the desired recording length in seconds!
askForSubTune=Enter number of subtone!
cutNoneSeen=Skip Notes Outside The Panel
calculating=Calculating...
editPicture=Edit Picture
ignoreNotes=Ignore notes betweeen:
sprite=Sprite
drums=Drums and Channel Priority Changer
channelPrio=Change Channel Priority
drumSettings=Change Drum Settings
midiInstrument=MIDI Instrument:
atariInstrument=TIA Instrument:
reAlign=Realign Data
sid2midi=Sid2Midi Manual Conversion
sid2midiText=Since the original SID converter failed and you want to convert more than 90 seconds, you have to save you file as 'temp/temp.mid'! The conversion will continue after that.
deleteAllAfter=Delete All After
deleteAllMessage=All data after the currenct screen will be deleted! Continue?
dro=DOSBox raw OPL
imf=Id Music Format
wlf=Id Music Format
raw=RDOS raw OPL
amDisable=Disable AM modulation for Adlib VGM?
amModulation=AM Modulation
vibratioSettings=Vibratio Settings
vibratioSettingsMessage=Do you wish to turn off YM3812 vibratio globally?
setMidiTempo=Set a float for midi tempo! (default: 1.00)
soundPlayer=Sound Player
openSound=Open WAV
recordSound=Record WAV
generateSpeech=Generate Speech
wav=Wav Sound File
openWav=Open Sound File
play=Play
recordTime=Time to Record (sec):
pitch=Pitch:
speed=Speed:
throat=Throat:
mouth=Mouth:
speech=Test Speech
record=Record
waveError=Open Wave Failed
waveErrorMessage=Conversion of Wave file failed. Try to convert your file to 8000 Hz / 8bit / mono first!
saveToFile=Save Memory Settings
saveToFileBank=Save This Bank Only
restoreFile=Restore Memory from File
archive=Archiving Project
screenTopBottom=Screen Top/Bottom Elements
bigSprite=Screen Top/Bottom Sprite Editor
archivedDates=Archived Dates:
restore=Restore State
archieveCurrent=Archive Current
numberOfFiles=Number Of Files:
sizeOfFiles=Size of Files:
enter=Enter
leave=Leave
subroutines=Subroutines
lineHeight=Line Height:
spriteType=Sprite Type:
simple=Simple
double=Double
overlay=Overlay
heightIndex=Height Index:
xOffset=X Offset
yOffset=Y Offset
generateRandom=Generate Random
generateText=Generate Text
width=Width
menuMaker=Menu Maker
numItem=Number of Items
segments=Segments:
screenTop=Screen Top
screenBottom=Screen Bottom
addNew=Add New
testScreen=Test Screen
emptyBank=#bank# #level# seems to be empty
top=Top
bottom=Bottom
screenItem=Add Screen Item
availableScreenElements=Available Screen Elements
changeFrameColor=Change Frame Color
constant=Constant
variable=Variable
mustBeVar=Must be a constant or a full 8bit wide non-system variable!
segmentName=Segments names start with a letter, contain letters, numbers and underscores!
nameAlready=Labelname already usen in #bank#'s #section# section!
mustBeVar2=Must be a constant or a non-system variable!
Picture64px=64 Pixels Wide Picture
no64px=Not a single 64 pixels wide picture found!
displayedHeight=Displayed Height:
indicatorTyp=Indicator Type
dataVar=Data Variable
color=Color
gradient=Gradient
maxVal=Maximum Value
gradient1=Light to Dark
gradient2=Dark to Light
gradient3=Light in the Middle
gradient4=Dark in the Middle
spriteName=Sprite Name
spriteVar=Sprite Variable
mirrored=Mirrored
text=Text
justifyRight=Justify Right
dots=Dots (not Line)
font=Font
default=Default
digital=Digital
custom=Custom
numOfDigits=Number of Digits
slotMachine=Slotmachine Mode
screenTester=Screen Tester - Variables
sameColor=Same Color as Icon
digitsOnly=Digits Only
missingItems=Could'nt find any suitable #item# in project folder #folder#!
24hours=24 hours mode
divider=Frame Divider
decrement=Decrementing
xPoz=X Position
textColor=Text Color
backColor=Background Color
menu=Menu
defaultColors=Set Default Colors
activeColor=Active Color
inactiveColor=Inactive Color
availableMusic=Available Music/Wave
addedMusic=Added Music/Wave
jukeBoxError1=Jukebox needs at least one song/wave to be added!
banksNeeded=Banks Needed
banksLocked=Locked Banks
jukeBoxError2=#item# needs #number# more banks locked!
autoLock=Auto Lock
soundDataVars=Sound Data Access Variables
incompleteItem=Incomplete Item Found
incompleteItemError=#item# seems to be unfinished on #bank# and compiling would fail!
missingLock=Missing Lock
missingLockError=#item# on #bank# is missing locks! Compiling would fail!
spriteColor=Sprite Color
gradientSprite=Sprite Gradient
gradientBack=Background Gradient
particles=Particles
initialize=Initialize to
zero=Zero
GRP0=Player 0 Sprite
GRP1=Player 1 Sprite
ENAM0=Missile 0
ENAM1=Missile 1
ENABL=Ball
PF0=Playfield Part 0
PF1=Playfield Part 1
PF2=Playfield Part 2
HMCLR=Horizontal Motion
COLUPF=Playfield Color
COLUBK=Background Color
COLUP0=Player 0 Color
COLUP1=Player 1 Color
speedConst=Speed Constants
sunMoon=Sun & Moon Sprite
cloud=Cloud Sprite
direction=Direction
numOfLines=Number of Lines
baseColor=Base Color
rainbow=Rainbow
oneColor=One Color
colorVar=Color Variable
horizontal=Horizontal
vertical=Vertical
alterLastFrameColor=Alter Last Sceen Element's FrameColor
container=Container
linesOfPattern=Lines of Pattern
verticalMir=Vertically Mirrored
moveBack=Move Backwards
curved=Curved
gaps=Gaps
none=None
minimap=Mini Map Maker
importPlayfield=Import Playfield
region=Region
ballColor=Ball Color
dimensions=Dimensions
fillThru=Fill thru regions on Y axis
spritePF=Sprite / Playfield Color
minimap=MiniMap
bcd=Binary Coded Decimal
delimiterInName=Delimiter found in name!
startWithBank=Variable Name cannot start with 'Bank'!
recommendations=Recommendations
number=Number
level=Level
command=Command
param=Param
comment=Comment
updateRow=Update Row
build=Build Project
findWord=Find Word
ignoreCase=Ignore Case
replace=Replace With
replaceInLine=Replace In Line
replaceAll=Replace All
reIndent=reIndentation
convertASM=Convert To Assembly
errorOnASMConvert=Error on ASM convert
errorOnASMConvertText=No #type# found for command on #line#! Cannot start compilation!
compilerErrorParam=Invalid #PARAM# #VAL# found on #BANK#'s #SECTION# on line #LINENUM#! 
compilerErrorConst=Constanst must be decimal, binary ('%11111111') or hex ('$FF') numbers!
compilerErrorCommand=Invalid command #VAL# found on #BANK#'s #SECTION# on line #LINENUM#!
compilerErrorVariable=Variables must be global or owned by current bank, also writable if needed!
compilerErrorNumber=Numbers must be between 0-255, in decimal, binary ('%11111111') or hex ('$FF') format!
compilerErrorString=Strings are text delimited by ". ' or '.
compilerErrorSub=Subroutines are declared in every bank's "subroutines" section.
compilerErrorArray=Arrays must be global or owned by current bank, also writable if needed!
noEndFound=Command #COMMAND# requires a proper #END# as closing!
noStartFound=The end-command #COMMAND# has no command binded.
noSelectForCase=The command #COMMAND# has no opening "Select" kind of command.
noEndForCase=The command #COMMAND# has no closing "End-Select" kind of command.
noCaseForDefault=The command #COMMAND# needs at least one "Case" kind of command inside the selection!
missingOpeningBracket=Missing opening bracket for params!
missingClosingBracket=Missing closing bracket for params!
commandDoesNotNeedBrackets=The given command does not need any params or brackets!
sectionNotAllowed=The command is allowed in the following sections only: #SECTIONS#!
levelNotAllowed=The command is allowed on the following level only: #LEVEL#!
paramNotNeeded=Too many params given for command!
iteralError=Wrong usage of variable "item"! "Do-items" kind of commands cannot be nested!
compilerErrorStatementCalc=Calculating statements can contain numbers, variables, constants, brackets and arithmetic signs
compilerErrorStatementComp=Comparing statements can contain numbers, variables, constants, brackets, arithmetic signs and ONE comparing sign!
compilerErrorStatementStr=String statements can contain numbers, variables, constants, strings and the '+' sign!
compilerErrorASM=Error found on compiled assembly from line #LINENUM#!
compilerErrorASMOpCode=#OPCODE# is not a valid opcode or #OPERAND# is not suited for it!
compilerErrorASMNumber=#OPERAND# is not a valid number! Numbers must be between 0-255, in decimal, binary ('%11111111') or hex ('$FF') format!
compilerErrorASMRegisterAddr=#OPERAND# is not a valid register/memory address!
compilerErrorASMRIOTRead=#OPCODE# requires a readable register. Maybe, #OPERAND# of RIOT is write-only?
compilerErrorASMRIOTWrite=#OPCODE# requires a writable register. Maybe, #OPERAND# of RIOT is read-only?
compilerErrorASMRIOTBoth=#OPCODE# requires a register that can be read and also written. #OPERAND# seems to be one-way only.
compilerErrorASMsARAWrite=#OPCODE# requires a SARA write address. #OPERAND# seems to be a read address ( > $F079)
compilerErrorASMsARARead=#OPCODE# requires a SARA read address. #OPERAND# seems to be a write address ( < $F080)
compilerErrorASMsARABoth=#OPCODE# requires an address that can be written and read at the same time! SARA addressed cannot work that way.
compilerErrorASMCPURead=#OPCODE# requires a register that can be read! #OPERAND# seems to be write-only!
compilerErrorASMCPUWrite=#OPCODE# requires a register that can be written! #OPERAND# seems to be read-only!
compilerErrorASMCPUBoth=#OPCODE# requires an address that can be written and read at the same time! CPU register addressed cannot work that way.
compilerErrorASMVariableWrite=#OPCODE# requires a variable that can be written! #OPERAND# seems to be read-only!
compilerErrorASMVariableBoth=#OPCODE# requires a variable that can be written and read at the same time! #OPERAND# is not suited (maybe SARA or System var?)!
compilerErrorASMConstantWrite=#OPCODE# requires a writable item. #OPERAND# is a constant, constants are read-only!
compilerErrorASMConstantBoth=#OPCODE# requires an item both writable and readable. #OPERAND# is a constant, constants are read-only!
compilerErrorASMAddressRead=#OPCODE# requires a readable address. #OPERAND# is a write-only address.
compilerErrorASMAddressWrite=#OPCODE# requires a writable address. #OPERAND# is a read-only address.
compilerErrorASMRegisterRead=#OPCODE# requires a readable register. #OPERAND# is a write-only address.
compilerErrorASMRegisterWrite=#OPCODE# requires a writable register. #OPERAND# is a read-only address.
compilerErrorStatementComprass=#PARAM# statement has the comprass item (#VAR#) not on level 0!
compilerErrorStatementError=Syntax error found on statement #PARAM#!
compilerErrorStatementComplex=Statement #PARAM# is too complex!
compilerErrorStatementTemps=Not enough temporal variables to calculate statement/store variable #PARAM#!
compilerErrorSubroutine=#PARAM# subroutine not found in #BANK#!
compilerErrorVarNotFound=#PARAM# variable not available for #BANK#!
compilerErrorNoEnd=No end-command found for command #VAL# on line #LINENUM#!
compilerErrorNoCases=No case found for command #VAL# on line #LINENUM#!
compilerErrorMoreDefault=More than one defaults found for command #VAL# on line #LINENUM#!
compilerErrorCaseNotNumber=If you set #VAR# variable for Select, instead of #PARAM#, you should set only constants, variables and numbers for cases!
compilerErrorMustBe1=If you set a constant or number for Select, it's value must be 1 (as "True"). #PARAM# has a value of #VAR#!
compilerErrorComprassNotFound=Not found any comprass item  in #PARAM# statement!
compilerErrorZeroDiv=You cannot do a division with zero!
infiniteLoop=Using "do" commands without exit conditions must have at least one "exit", "return", "goto" or "leave" the prevent infinite loops!
mustBePowerOf2=Do-Frames command needs 1 or a power of 2 for the first param!
mustBeSmaller=Do-Frames command's second parameter must be smaller or equal to the first one!