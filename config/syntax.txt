do=[for perform],[common],command,end,None,[],None,None
do-while=[for-while perform-while],[common],command,end,brackets,[],[statement],read
do-until=[for-until perform-until],[common],command,end,brackets,[],[statement],read
do-times=[for-until perform-until],[common],command,end,brackets,[],[number|stringConst variable],write
do-items=[for-items perform-items foreach],[common],command,end,brackets,[],[array],item
cycle=[continue],[common],command,None,None,[],None,None
exit=[break],[common],command,None,None,[],None,None
subroutine=[procedure],[common],command,end,brackets,[subroutines],[string],None
return=[],[common],command,None,brackets,[subroutines],[number|variable|stringConst],read
call=[exec execute],[common],command,None,brackets,[],[subroutine {variable}],write
set=[],[common],command,None,brackets,[],[variable number|variable|stringConst],write
const=[constant],[common],command,None,brackets,[enter],[string number],None
select=[switch evaluate],[common],command,end,brackets,[],[variable|stringConst|number],read
case=[when],[common],command,None,brackets,[],[variable|number|statement|stringConst],read
default=[other else],[common],command,None,brackets,[],[variable|number|statement|stringConst],read
asm=[assembly],[common],command,None,brackets,[],[string {string}],None
calc=[calculate compute comp],[common],command,None,brackets,[],[variable statement],write