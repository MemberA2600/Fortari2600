command;[aliasnames]; [kernels]; type; needs end?; needs brackets?; [where it can be used]; [params]; io method; fixed level;flexSave
add;[addition +];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
and;[& &&];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
asm;[assembly];[common];command;None;brackets;[];[string {string}];None;None;False
bitOn;[on];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
bitOff;[off];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
calc;[calculate compute comp];[common];command;None;brackets;[];[variable statement];write;None;False
call;[exec execute];[common];command;None;brackets;[!subroutines];[subroutine {variable}];write;None;False
callIf;[execIf executeIf];[common];command;None;brackets;[!subroutines];[statement subroutine {variable}];write;None;False
case;[when];[common];command;None;brackets;[];[variable|number|statement|stringConst];read;None;False
cycle;[continue next];[common];command;None;None;[];None;None;None;False
decr;[decrement --];[common];command;None;brackets;[];[variable];write;None;False
default;[other else];[common];command;None;None;[];None;None;None;False
div;[divide /];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
do-items;[for-items perform-items foreach];[common];command;end;brackets;[];[array];item;None;False
do-times;[for-until perform-until];[common];command;end;brackets;[];[number|stringConst|variable];write;None;False
do-until;[for-until perform-until];[common];command;end;brackets;[];[statement];read;None;False
do-while;[for-while perform-while];[common];command;end;brackets;[];[statement];read;None;False
do-frames;[for-frames perform-frames];[common];command;end;brackets;[];[number|stringConst {number|stringConst}];read;None;False
do;[for perform];[common];command;end;None;[];None;None;None;False
exit;[break next-sentence];[common];command;None;None;[];None;None;None;False
flip;[! not ~];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
goto;[go];[common];command;None;brackets;[leave];[number|stringConst|variable];None;None;False
incr;[increment ++];[common];command;None;brackets;[];[variable];write;None;False
init;[initizalize];[common];command;None;brackets;[];[array];write;None;False
largest;[biggest];[common];command;None;brackets;[];[variable array];write;None;True
leave;[=>];[common];command;None;None;[overscan];None;None;None;False
min;[minimalize];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
max;[maximalize];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
multi;[multiply *];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
or;[| ||];[common];command;None;brackets;[];[variable number|variable|stringConst {variable}];write;None;True
pow;[power **];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
rand;[random];[common];command;None;brackets;[];[variable {number|variable|stringConst} {number|variable|stringConst}];write;None;False
rem;[remainder %];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
resetGame;[resG];[common];command;None;None;[overscan];None;None;None;False
resetScreen;[resS];[common];command;None;None;[overscan];None;None;None;False
return;[<=];[common];command;None;brackets;[subroutines];[number|variable|stringConst];read;None;False
rollL;[rol <-];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
rollR;[ror ->];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
screen;[scr];[common];command;end;brackets;[screenroutines];[string];None;0;False
select;[switch evaluate];[common];command;end;brackets;[];[variable|stringConst|number];read;None;False
set;[=];[common];command;None;brackets;[];[variable number|variable|stringConst];write;None;False
setAll;[setA =A];[common];command;None;brackets;[];[array number|variable|stringConst];write;None;False
shiftL;[asl <<];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
shiftR;[lsr >>];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
sin;[sinewave];[common];command;None;brackets;[];[variable number|variable|stringConst {number|variable|stringConst}];write;None;False
smallest;[tiniest];[common];command;None;brackets;[];[variable array];write;None;True
sqrt;[];[common];command;None;brackets;[];[number|variable|stringConst {variable}];write;None;True
sub;[subtract -];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True
subroutine;[procedure subr proc];[common];command;end;brackets;[subroutines];[string];None;0;False
swap;[<<>>];[common];command;None;brackets;[];[variable variable];write;None;False
xor;[eor ^];[common];command;None;brackets;[];[number|variable|stringConst number|variable|stringConst {variable}];write;None;True